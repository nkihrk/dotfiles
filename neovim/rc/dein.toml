############################################################
#
# Utility
#
############################################################

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_add = '''
	autocmd FileType denite call s:denite_my_settings()
	function! s:denite_my_settings() abort
		nnoremap <silent><buffer><expr> <CR>
		\ denite#do_map('do_action')
		nnoremap <silent><buffer><expr> d
		\ denite#do_map('do_action', 'delete')
		nnoremap <silent><buffer><expr> p
		\ denite#do_map('do_action', 'preview')
		nnoremap <silent><buffer><expr> q
		\ denite#do_map('quit')
		nnoremap <silent><buffer><expr> i
		\ denite#do_map('open_filter_buffer')
		nnoremap <silent><buffer><expr> <Space>
		\ denite#do_map('toggle_select').'j'
	endfunction
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
	let g:deoplete#enable_at_startup = 1
	"let g:deoplete#auto_completion_start_length = 1
'''

[[plugins]]
repo = 'deoplete-plugins/deoplete-jedi'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

#[[plugins]]
#repo = 'Shougo/vinarise.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-endwise'

[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
	let g:ale_linters = {
		\		'*': ['eslint'],
		\		'python': ['flake8']
		\	}
	let g:ale_fixers = {
		\		'*': ['prettier'],
		\		'python': ['autopep8', 'black', 'isort']
		\	}

	let g:ale_python_flake8_executable = g:python3_host_prog
	let g:ale_python_flake8_options = '-m flake8'
	let g:ale_python_autopep8_executable = g:python3_host_prog
	let g:ale_python_autopep8_options = '-m autopep8'
	let g:ale_python_isort_executable = g:python3_host_prog
	let g:ale_python_isort_options = '-m isort'
	let g:ale_python_black_executable = g:python3_host_prog
	let g:ale_python_black_options = '-m black'

	let g:ale_sign_column_always = 1
	let g:ale_fix_on_save = 1
	let g:ale_completion_autoimport = 1
	let g:ale_lint_on_text_changed = 'never'
	let g:ale_lint_on_enter = 1

	let g:ale_sign_error = '>>'
	let g:ale_sign_warning = '--'
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'

[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
	vmap v <Plug>(expand_region_expand)
	vmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'vim-scripts/gitignore'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
	let g:ctrlp_map = '<c-p>'
	let g:ctrlp_cmd = 'CtrlP'
	let g:ctrlp_working_path_mode = 'ra'
	let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
	let g:ctrlp_use_caching = 0
	if executable('rg')
		let g:ctrlp_user_command = 'rg --files %s'
		let g:ctrlp_use_caching = 0
		let g:ctrlp_working_path_mode = 'ra'
		let g:ctrlp_switch_buffer = 'et'
	else
		let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']
		let g:ctrlp_prompt_mappings = {'AcceptSelection("e")': ['<space>', '<cr>', '<2-LeftMouse>']}
	endif
'''

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'alvan/vim-closetag'
hook_add = '''
	let g:closetag_filenames = '*.html,*.xhtml,*.phtml'
	let g:closetag_xhtml_filenames = '*.xhtml,*.jsx'
	let g:closetag_filetypes = 'html,xhtml,phtml'
	let g:closetag_xhtml_filetypes = 'xhtml,jsx'
	let g:closetag_emptyTags_caseSensitive = 1
	let g:closetag_regions = {
		\		'typescript.tsx': 'jsxRegion,tsxRegion',
		\		'javascript.jsx': 'jsxRegion',
		\	}
	let g:closetag_shortcut = '>'
	let g:closetag_close_shortcut = '<leader>>'
'''

[[plugins]]
repo = 'Townk/vim-autoclose'

[[plugins]]
repo = 'skywind3000/asyncrun.vim'
hook_add = '''
	let g:asyncrun_open = 10
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'Vimjas/vim-python-pep8-indent'



############################################################
#
# Syntax highlighting
#
############################################################

[[plugins]]
repo = 'burnettk/vim-angular'
hook_add = '''
	let g:angular_find_ignore = ['build/', 'dist/']
'''

[[plugins]]
repo = 'posva/vim-vue'

[[plugins]]
repo = 'HerringtonDarkholme/yats.vim'

[[plugins]]
repo = 'mhartington/nvim-typescript'
build = './install.sh'
hook_add = 'let g:nvim_typescript#vue_support = 1'

[[plugins]]
repo = 'leafgarland/typescript-vim'

[[plugins]]
repo = 'pangloss/vim-javascript'
hook_add = '''
	let g:javascript_plugin_jsdoc = 1
	let g:javascript_plugin_ngdoc = 1
	let g:javascript_plugin_flow = 1
'''

[[plugins]]
repo = 'othree/html5.vim'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
hook_add = '''
	augroup VimCSS3Syntax
		autocmd!
		autocmd FileType css setlocal iskeyword+=-
	augroup END
'''

[[plugins]]
repo ='cespare/vim-toml'

#[[[plugins]]]
#repo = 'tikhomirov/vim-glsl';

[[plugins]]
repo = 'numirias/semshi'

[[plugins]]
repo = 'MaxMEllon/vim-jsx-pretty'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'peitalin/vim-jsx-typescript'
hook_add = '''
	autocmd BufNewFile,BufRead *.tsx,*.jsx set filetype=typescriptreact
'''

[[plugins]]
repo = 'styled-components/vim-styled-components'



############################################################
#
# GUI
#
############################################################

[[plugins]]
repo = 'ryanoasis/vim-devicons'
hook_add = '''
	set guifont=Droid\ Sans\ Mono\ for\ Powerline\ Nerd\ Font\ Complete\ 12
	set encoding=utf-8
	let g:WebDevIconsNerdTreeBeforeGlyphPadding = ""
	let g:WebDevIconsUnicodeDecorateFolderNodes = v:true
	if exists('g:loaded_webdevicons')
		call webdevicons#refresh()
	endif
'''

#[[plugins]]
#repo = 'tomasr/molokai'
#hook_add = 'let g:rehash256 = 1'

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = 'let g:rainbow_active = 1'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes']

[[plugins]]
repo = 'vim-airline/vim-airline-themes'
hook_add = '''
	let g:airline_powerline_fonts = 1
	set laststatus=2
	let g:airline_theme='molokai'
'''

[[plugins]]
repo = 'edkolev/tmuxline.vim'

[[plugins]]
repo = 'airblade/vim-gitgutter'



